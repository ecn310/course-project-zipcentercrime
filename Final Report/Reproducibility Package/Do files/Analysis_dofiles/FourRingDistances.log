----------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\sgortizh\OneDrive - Syracuse Univers
> ity\EconResearch\course-project-zipcentercrime\Final Rep
> ort\Reproducibility Package\Do files\Analysis_dofiles\Fo
> urRingDistances.log
  log type:  text
 opened on:  22 Apr 2025, 15:14:29

. 
. *** Then, import the Arc Data needed 
. 
. import delimited "ExtraFiles\2017_Arc_Data.csv"
(encoding automatically selected: UTF-8)
(2 vars, 620,359 obs)

.  
. *** Then, drop any values that were further than 2500 me
> ters from any treatment center
. 
. drop if near_dist == -1
(205,143 observations deleted)

. 
. ssc install outreg2
checking outreg2 consistency and verifying not already ins
> talled...
all files already exist and are up to date.

. ssc install estout
checking estout consistency and verifying not already inst
> alled...
all files already exist and are up to date.

. 
. *** Then, create the distance rings. This is the farther
>  bound of the distance ring
. 
. gen dist_group = 500 if near_dist <= 500
(354,168 missing values generated)

. replace dist_group = 1000 if (near_dist <= 1000 & near_d
> ist >500)
(105,456 real changes made)

. replace dist_group = 1500 if (near_dist <= 1500 & near_d
> ist >1000)
(117,642 real changes made)

. replace dist_group = 2000 if (near_dist <= 2000 & near_d
> ist >1500)
(78,555 real changes made)

. replace dist_group = 2500 if (near_dist <= 2500 & near_d
> ist >2000)
(52,515 real changes made)

. 
. *** Then, create the lower bound of the distance rings. 
. 
. gen dist_group2 = 0 if near_dist <= 500 
(354,168 missing values generated)

. replace dist_group2 = 500 if (near_dist <= 1000 & near_d
> ist >500)
(105,456 real changes made)

. replace dist_group2 = 1000 if (near_dist <= 1500 & near_
> dist >1000)
(117,642 real changes made)

. replace dist_group2 = 1500 if (near_dist <= 2000 & near_
> dist >1500)
(78,555 real changes made)

. replace dist_group2 = 2000 if (near_dist <= 2500 & near_
> dist >2000)
(52,515 real changes made)

. 
. 
. *dist_group2 of 2500 doesnt' have an uppderbound, so the
> re won't be anything
. *** At this point, every call has an assigned SATC, The 
> distance it is from that SATC, and a assigned upperbound
>  distance ring and lowerbound distance ring. 
. ***Now, we count up the amount of observations per assig
> ned dist_group and identify that number. 
. 
. egen freq = count(near_dist), by(dist_group)

. 
. ***Then, we found the area for each respective group
. 
. gen area = (c(pi) * dist_group^2) - (c(pi) * dist_group2
> ^2) 

. 
. *** taking that difference in area and dividing the amou
> nt of calls in that specific distance group by the new r
> ing of area will give us the number of calls per the inc
> rease in area from one ring to the next largest, to stan
> dardize the total calls by their repestive area sizes
. 
. gen CallxArea = freq / area

. 
. ***these commands create new seperate variables for each
>  distance group 
. gen dist_group_500 = 1 if near_dist <= 500
(354,168 missing values generated)

. gen dist_group_1000 = 1 if (near_dist <= 1000 & near_dis
> t >500)
(309,760 missing values generated)

. gen dist_group_1500 = 1 if (near_dist <= 1500 & near_dis
> t >1000)
(297,574 missing values generated)

. gen dist_group_2000 = 1 if (near_dist <= 2000 & near_dis
> t >1500)
(336,661 missing values generated)

. gen dist_group_2500 = 1 if (near_dist <= 2500 & near_dis
> t >2000)
(362,701 missing values generated)

. 
. 
. *** This is now total calls per ring. 
. ***This command collapses our data down, Using the vario
> us variables we created for each seperate distance group
> s we can now collapse the data by the count of how many 
> of our observations are within each individual distance 
> groups per SATC center
. 
. collapse (count) dist_group_500 dist_group_1000 dist_gro
> up_1500 dist_group_2000 dist_group_2500, by(near_fid)

. 
. *** When collapse (count), it reduced the number of tota
> l calls to 35,731, when at the beginning there was 415,2
> 16 calls. 
. 
. replace dist_group_500 = (dist_group_500 / 589048.6225) 
> * 1000000
variable dist_group_500 was long now double
(43 real changes made)

. replace dist_group_1000 = (dist_group_1000 / 1374446.786
> ) * 1000000
variable dist_group_1000 was long now double
(43 real changes made)

. replace dist_group_1500 = (dist_group_1500 / 2159844.949
> ) * 1000000
variable dist_group_1500 was long now double
(44 real changes made)

. replace dist_group_2000 = (dist_group_2000 / 2945243.113
> ) * 1000000
variable dist_group_2000 was long now double
(40 real changes made)

. replace dist_group_2500 = (dist_group_2500 / 3730641.276
> ) * 1000000
variable dist_group_2500 was long now double
(30 real changes made)

. 
. *** To check, add up the dist~500 column to see what tot
> al calls come out
. 
. egen row_sum = rowtotal(dist_group_500 dist_group_1000 d
> ist_group_1500 dist_group_2000 dist_group_2500)

. summarize row_sum, meanonly

. display r(sum)
275580.73

. 
. 
. ***Couldn't we also collapse count by the CallxArea vari
> able? No, if we did, then we wouldn't be taking in SATCs
>  into the final analysis (in the unit) at all. We need t
> o do mean calls per ring per SATC center?
. ***So now, we have number of total 911 calls by ring for
>  each SATC (1-44). How do we go about doing a two sample
>  t-test now? Either do a matrix, or this new thing I wil
> l try out.
. 
. local vars dist_group_500 dist_group_1000 dist_group_150
> 0 dist_group_2000 dist_group_2500

. 
. matrix Summary_Results_2 = J(1, 6, .)

. 
. *** Start the loop
. 
. foreach var of local vars {
  2.    
.    *** This is to summarize each variable 
.     summarize `var', detail
  3.     
.     *** This will save each of the needed summary stats 
> from the Data
. 
.     local N = r(N)
  4.     local mean = r(mean)
  5.     local sd = r(sd)
  6.     local sum = r(sum)
  7.     local min = r(min)
  8.     local max = r(max)
  9.     
.         *** This adds the captured data into the Matrix
.     
.     matrix Summary_Results_2 = Summary_Results_2 \ (`N',
>  `mean', `sd', `sum', `min', `max')
 10.         }

                   (count) dist_group_500
----------------------------------------------------------
> ---
      Percentiles      Smallest
 1%            0              0
 5%     20.37183       15.27887
10%     101.8592       20.37183       Obs                 
>  44
25%     1091.591       42.44132       Sum of wgt.         
>  44

50%     1965.882                      Mean           2355.
> 416
                        Largest       Std. dev.      2100.
> 904
75%      3015.88       5654.881
90%     4312.038       7692.065       Variance        4413
> 798
95%     7692.065       7790.528       Skewness       1.671
> 559
99%     9663.039       9663.039       Kurtosis       5.976
> 685

                   (count) dist_group_1000
----------------------------------------------------------
> ---
      Percentiles      Smallest
 1%            0              0
 5%     379.0616       205.1735
10%     508.5683       379.0616       Obs                 
>  44
25%     881.4455       462.0041       Sum of wgt.         
>  44

50%     1620.288                      Mean           1743.
> 776
                        Largest       Std. dev.      1044.
> 324
75%     2412.607       3325.702
90%     3071.781       3401.368       Variance        1090
> 613
95%     3401.368       3785.523       Skewness       .4517
> 499
99%     4324.649       4324.649       Kurtosis       2.445
> 274

                   (count) dist_group_1500
----------------------------------------------------------
> ---
      Percentiles      Smallest
 1%     .4629962       .4629962
 5%      36.1137       10.64891
10%     67.59744        36.1137       Obs                 
>  44
25%      422.484       56.94853       Sum of wgt.         
>  44

50%     1022.527                      Mean           1237.
> 905
                        Largest       Std. dev.       1070
> .71
75%     1669.796       2950.212
90%     2501.568        3592.85       Variance        1146
> 420
95%      3592.85       3710.915       Skewness       1.360
> 333
99%     4892.018       4892.018       Kurtosis       5.011
> 651

                   (count) dist_group_2000
----------------------------------------------------------
> ---
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%     .3395305              0       Obs                 
>  44
25%      56.7016              0       Sum of wgt.         
>  44

50%     462.1011                      Mean           606.1
> 778
                        Largest       Std. dev.      600.6
> 916
75%     974.6224       1722.778
90%     1618.542       1821.242       Variance       36083
> 0.4
95%     1821.242       1863.344       Skewness       .8447
> 396
99%     2116.973       2116.973       Kurtosis       2.731
> 348

                   (count) dist_group_2500
----------------------------------------------------------
> ---
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 
>  44
25%            0              0       Sum of wgt.         
>  44

50%     193.1303                      Mean           319.9
> 243
                        Largest       Std. dev.      404.3
> 728
75%     405.8284       938.7126
90%     929.8669       1246.166       Variance       16351
> 7.4
95%     1246.166       1263.054       Skewness       1.419
> 646
99%     1567.827       1567.827       Kurtosis       4.168
> 615

. 
.         *** Change column and row names
. matrix colnames Summary_Results_2 = "Obs" "Mean" "Std. d
> ev." "Sum" "Min" "Max"

. 
. *** Delete empty row from matrix
. 
. matrix Summary_Results_2 = Summary_Results_2[2..6, 1..co
> lsof(Summary_Results_2)]

. 
. *** Rename the rows
. matrix rownames Summary_Results_2 = "500m" "1000m" "1500
> m" "2000m" "2500m"

. 
. matrix list Summary_Results_2

Summary_Results_2[5,6]
             Obs       Mean  Std. dev.        Sum
 500m         44   2355.416  2100.9041   103638.3
1000m         44   1743.776   1044.324  76726.143
1500m         44  1237.9045  1070.7098  54467.799
2000m         44  606.17777  600.69157  26671.822
2500m         44  319.92428  404.37285  14076.668

             Min        Max
 500m          0  9663.0393
1000m          0  4324.6491
1500m   .4629962  4892.0178
2000m          0  2116.9729
2500m          0   1567.827

. 
end of do-file

. do "C:\Users\sgortizh\AppData\Local\Temp\STD2da0_000000.
> tmp"

. esttab matrix(Summary_Results_2) using "Visual Graphics\
> Dist_4_Summary_Stats.tex", replace
(output written to Visual Graphics\Dist_4_Summary_Stats.te
> x)

. 
end of do-file

