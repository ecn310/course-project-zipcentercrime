-----------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\wrmaechl\OneDrive - Syracuse University\Documents\GitHub\course-project-zipcentercrime\Reproducibility 
> Package\Data_log.log
  log type:  text
 opened on:   1 Dec 2024, 14:55:53

. 
. *** This should be the file you exported from ArcGIS
. import delimited "2017_Arc_Data.csv"
(encoding automatically selected: UTF-8)
(2 vars, 620,359 obs)

. 
. *** This drops any values that were further than 2500 meters from any treatment center
. drop if near_dist == -1
(205,143 observations deleted)

. 
. *** this is install a program that may or may not be usefull in exporting tables
. ssc install outreg2
checking outreg2 consistency and verifying not already installed...
all files already exist and are up to date.

. 
. *** these commands seperate the data points from ArcGIS into groups based on their calculated distance to the nearest treat
> ment center in meters
. gen dist_group = 100 if near_dist <= 100 
(411,292 missing values generated)

. replace dist_group = 250 if (near_dist <= 250 & near_dist >100)
(13,571 real changes made)

. replace dist_group = 500 if (near_dist <= 500 & near_dist >250)
(43,553 real changes made)

. replace dist_group = 750 if (near_dist <= 750 & near_dist >500)
(46,198 real changes made)

. replace dist_group = 1000 if (near_dist <= 1000 & near_dist >750)
(59,258 real changes made)

. replace dist_group = 1250 if (near_dist <= 1250 & near_dist >1000)
(64,059 real changes made)

. replace dist_group = 1500 if (near_dist <= 1500 & near_dist >1250)
(53,583 real changes made)

. replace dist_group = 1750 if (near_dist <= 1750 & near_dist >1500)
(46,384 real changes made)

. replace dist_group = 2000 if (near_dist <= 2000 & near_dist >1750)
(32,171 real changes made)

. replace dist_group = 2250 if (near_dist <= 2250 & near_dist >2000)
(30,260 real changes made)

. replace dist_group = 2500 if (near_dist <= 2500 & near_dist >2250)
(22,255 real changes made)

. 
. *** these commands are used to make a second variable that is one distance size smaller than its actrual group which allows
>  us to calculate the difference in area between the two radii
. gen dist_group2 = 0 if near_dist <= 100 
(411,292 missing values generated)

. replace dist_group2 = 100 if (near_dist <= 250 & near_dist >100)
(13,571 real changes made)

. replace dist_group2 = 250 if (near_dist <= 500 & near_dist >250)
(43,553 real changes made)

. replace dist_group2 = 500 if (near_dist <= 750 & near_dist >500)
(46,198 real changes made)

. replace dist_group2 = 750 if (near_dist <= 1000 & near_dist >750)
(59,258 real changes made)

. replace dist_group2 = 1000 if (near_dist <= 1250 & near_dist >1000)
(64,059 real changes made)

. replace dist_group2 = 1250 if (near_dist <= 1500 & near_dist >1250)
(53,583 real changes made)

. replace dist_group2 = 1500 if (near_dist <= 1750 & near_dist >1500)
(46,384 real changes made)

. replace dist_group2 = 1750 if (near_dist <= 2000 & near_dist >1750)
(32,171 real changes made)

. replace dist_group2 = 2000 if (near_dist <= 2250 & near_dist >2000)
(30,260 real changes made)

. replace dist_group2 = 2250 if (near_dist <= 2500 & near_dist >2250)
(22,255 real changes made)

. replace dist_group2 = 2500 if (near_dist <= 2750 & near_dist >2500)
(0 real changes made)

. 
. *** this uses the two distance groups calculated above as radii to find the area of that circle and subtract the area of th
> e smaller adjecent circle to calculate the total area of the ring that those calls came from to standardize the data as Cal
> ls per Area
. egen freq = count(near_dist), by(dist_group)

. gen area = (c(pi) * dist_group^2) - (c(pi) * dist_group2^2) 

. 
. *** This is used to get the exact amount of area so that we can divide our count of calls for each distance group once we c
> ollapse the data on line 71
. tab area 

       area |      Freq.     Percent        Cum.
------------+-----------------------------------
   31415.93 |      3,924        0.95        0.95
   164933.6 |     13,571        3.27        4.21
   589048.6 |     43,553       10.49       14.70
   981747.7 |     46,198       11.13       25.83
    1374447 |     59,258       14.27       40.10
    1767146 |     64,059       15.43       55.53
    2159845 |     53,583       12.90       68.43
    2552544 |     46,384       11.17       79.60
    2945243 |     32,171        7.75       87.35
    3337942 |     30,260        7.29       94.64
    3730641 |     22,255        5.36      100.00
------------+-----------------------------------
      Total |    415,216      100.00

. 
. *** taking that difference in area and dividing the amount of calls in that specific distance group by the new ring of area
>  will give us the number of calls per the increase in area from one ring to the next largest
. gen CallxArea = freq / area

. 
. *** these commands create new seperate variables for each distance group 
. gen dist_group_100 = 100 if near_dist <= 100
(411,292 missing values generated)

. gen dist_group_250 = 250 if (near_dist <= 250 & near_dist >100)
(401,645 missing values generated)

. gen dist_group_500 = 500 if (near_dist <= 500 & near_dist >250)
(371,663 missing values generated)

. gen dist_group_750 = 750 if (near_dist <= 750 & near_dist >500)
(369,018 missing values generated)

. gen dist_group_1000 = 1000 if (near_dist <= 1000 & near_dist >750)
(355,958 missing values generated)

. gen dist_group_1250 = 1250 if (near_dist <= 1250 & near_dist >1000)
(351,157 missing values generated)

. gen dist_group_1500 = 1500 if (near_dist <= 1500 & near_dist >1250)
(361,633 missing values generated)

. gen dist_group_1750 = 1750 if (near_dist <= 1750 & near_dist >1500)
(368,832 missing values generated)

. gen dist_group_2000 = 2000 if (near_dist <= 2000 & near_dist >1750)
(383,045 missing values generated)

. gen dist_group_2250 = 2250 if (near_dist <= 2250 & near_dist >2000)
(384,956 missing values generated)

. gen dist_group_2500 = 2500 if (near_dist <= 2500 & near_dist >2250)
(392,961 missing values generated)

. 
. *** This graph shows the decline in calls per area over the groups of distances recorded
. graph bar CallxArea, over(dist_group) title("Calls by Area for Each Distance") ytitle("Calls By Area") b1title("Distance Gr
> oups")

. graph export "C:\Users\wrmaechl\OneDrive - Syracuse University\Documents\GitHub\course-project-zipcentercrime\Visual Graphi
> cs\Calls_Distance.png", replace
file C:\Users\wrmaechl\OneDrive - Syracuse University\Documents\GitHub\course-project-zipcentercrime\Visual
    Graphics\Calls_Distance.png saved as PNG format

. 
. *** This command colapses our data down, Using the various variables we created for each seperate distance groups we can no
> w collapse the data by the count of how many of our observations are within each individual distance groups by the id numbe
> r for the treatment center it was nearest.
. collapse (count) dist_group_100 dist_group_250 dist_group_500 dist_group_750 dist_group_1000 dist_group_1250 dist_group_150
> 0 dist_group_1750 dist_group_2000 dist_group_2250 dist_group_2500, by(near_fid)

. 
. *** once our data is collapsed we use these commands to standardize the number of calls by the areas of the rings we calcul
> ated previously 
. replace dist_group_100 = dist_group_100 / 31415.9265
variable dist_group_100 was long now double
(36 real changes made)

. replace dist_group_250 = dist_group_250 / 164933.6143
variable dist_group_250 was long now double
(43 real changes made)

. replace dist_group_500 = dist_group_500 / 589048.6225
variable dist_group_500 was long now double
(43 real changes made)

. replace dist_group_750 = dist_group_750 / 981747.7042
variable dist_group_750 was long now double
(43 real changes made)

. replace dist_group_1000 = dist_group_1000 / 1374446.786
variable dist_group_1000 was long now double
(43 real changes made)

. replace dist_group_1250 = dist_group_1250 / 1767145.868
variable dist_group_1250 was long now double
(43 real changes made)

. replace dist_group_1500 = dist_group_1500 / 2159844.949
variable dist_group_1500 was long now double
(42 real changes made)

. replace dist_group_1750 = dist_group_1750 / 2552544.031
variable dist_group_1750 was long now double
(39 real changes made)

. replace dist_group_2000 = dist_group_2000 / 2945243.113
variable dist_group_2000 was long now double
(36 real changes made)

. replace dist_group_2250 = dist_group_2250 / 3337942.194
variable dist_group_2250 was long now double
(30 real changes made)

. replace dist_group_2500 = dist_group_2500 / 3730641.276
variable dist_group_2500 was long now double
(28 real changes made)

. 
. *** Now we will use a paired t test to measure the statisical likelyhood that one ring will have greater median of calls co
> mpared to the next larger ring
. table (command) (result), command(M2=r(mu_2) M1=r(mu_1) Difference= (r(mu_2) -r(mu_1)) p_value = r(p) Tailed_p = r(p_u): tt
> est dist_group_100 == dist_group_250) command(M2=r(mu_2) M1=r(mu_1) Difference= (r(mu_2) -r(mu_1)) p_value = r(p) Tailed_p 
> = r(p_u): ttest dist_group_250 == dist_group_500) command(M2=r(mu_2) M1=r(mu_1) Difference= (r(mu_2) -r(mu_1)) p_value = r(
> p) Tailed_p = r(p_u): ttest dist_group_500 == dist_group_750) command(M2=r(mu_2) M1=r(mu_1) Difference= (r(mu_2) -r(mu_1)) 
> p_value = r(p) Tailed_p = r(p_u): ttest dist_group_750 == dist_group_1000) command(M2=r(mu_2) M1=r(mu_1) Difference= (r(mu_
> 2) -r(mu_1)) p_value = r(p) Tailed_p = r(p_u): ttest dist_group_1000 == dist_group_1250) command(M2=r(mu_2) M1=r(mu_1) Diff
> erence= (r(mu_2) -r(mu_1)) p_value = r(p) Tailed_p = r(p_u): ttest dist_group_1250 == dist_group_1500) command(M2=r(mu_2) M
> 1=r(mu_1) Difference= (r(mu_2) -r(mu_1)) p_value = r(p) Tailed_p = r(p_u): ttest dist_group_1500 == dist_group_1750) comman
> d(M2=r(mu_2) M1=r(mu_1) Difference= (r(mu_2) -r(mu_1)) p_value = r(p) Tailed_p = r(p_u): ttest dist_group_1750 == dist_grou
> p_2000) command(M2=r(mu_2) M1=r(mu_1) Difference= (r(mu_2) -r(mu_1)) p_value = r(p) Tailed_p = r(p_u): ttest dist_group_200
> 0 == dist_group_2250) command(M2=r(mu_2) M1=r(mu_1) Difference= (r(mu_2) -r(mu_1)) p_value = r(p) Tailed_p = r(p_u): ttest 
> dist_group_2250 == dist_group_2500) nformat(%9.6f) stars(Tailed_p 0.1 "*" 0.05 "**" 0.01 "***", shownote)  name(t_test) rep
> lace

----------------------------------------------------------------------------------------------------------
                                         |        M2         M1   Difference    p_value   Tailed_p   stars
-----------------------------------------+----------------------------------------------------------------
ttest dist_group_100 == dist_group_250   |  0.001870   0.002839    -0.000969   0.056443   0.028221      **
ttest dist_group_2250 == dist_group_2500 |  0.000136   0.000206    -0.000070   0.003984   0.001992     ***
ttest dist_group_250 == dist_group_500   |  0.001680   0.001870    -0.000190   0.490720   0.245360        
ttest dist_group_500 == dist_group_750   |  0.001069   0.001680    -0.000611   0.006756   0.003378     ***
ttest dist_group_750 == dist_group_1000  |  0.000980   0.001069    -0.000090   0.391751   0.195875        
ttest dist_group_1000 == dist_group_1250 |  0.000824   0.000980    -0.000156   0.005975   0.002987     ***
ttest dist_group_1250 == dist_group_1500 |  0.000564   0.000824    -0.000260   0.000067   0.000033     ***
ttest dist_group_1500 == dist_group_1750 |  0.000413   0.000564    -0.000151   0.040070   0.020035      **
ttest dist_group_1750 == dist_group_2000 |  0.000248   0.000413    -0.000165   0.001363   0.000682     ***
ttest dist_group_2000 == dist_group_2250 |  0.000206   0.000248    -0.000042   0.039335   0.019668      **
----------------------------------------------------------------------------------------------------------
*** p<.01, ** p<.05, * p<.1

. collect set t_test
(current collection is t_test)

. collect export "C:\Users\wrmaechl\OneDrive - Syracuse University\Documents\GitHub\course-project-zipcentercrime\Visual Grap
> hics\t_test.tex", replace
(collection t_test exported to file C:\Users\wrmaechl\OneDrive - Syracuse
 University\Documents\GitHub\course-project-zipcentercrime\Visual Graphics\t_test.tex)

. 
. 
. 
. *** This test shows the sum of each variable divided by the sum of the next largest variable to show an estimate of how man
> y more or less calls you can expect going from one ring to an adjecent one
. ratio (dist_group_100/dist_group_250) (dist_group_250/dist_group_500) (dist_group_500/dist_group_750) (dist_group_750/dist_
> group_1000) (dist_group_1000/dist_group_1250) (dist_group_1250/dist_group_1500) (dist_group_1500/dist_group_1750) (dist_gro
> up_1750/dist_group_2000) (dist_group_2000/dist_group_2250) (dist_group_2250/dist_group_2500), fvwrap(1) 

Ratio estimation                            Number of obs = 44

     _ratio_1: dist_group_100/dist_group_250
     _ratio_2: dist_group_250/dist_group_500
     _ratio_3: dist_group_500/dist_group_750
     _ratio_4: dist_group_750/dist_group_1000
     _ratio_5: dist_group_1000/dist_group_1250
     _ratio_6: dist_group_1250/dist_group_1500
     _ratio_7: dist_group_1500/dist_group_1750
     _ratio_8: dist_group_1750/dist_group_2000
     _ratio_9: dist_group_2000/dist_group_2250
    _ratio_10: dist_group_2250/dist_group_2500

--------------------------------------------------------------
             |             Linearized
             |      Ratio   std. err.     [95% conf. interval]
-------------+------------------------------------------------
    _ratio_1 |   1.518016    .305492       .901933      2.1341
    _ratio_2 |   1.112848   .1703623      .7692794    1.456416
    _ratio_3 |   1.571244   .1966827      1.174596    1.967893
    _ratio_4 |   1.091451   .1104992      .8686081    1.314294
    _ratio_5 |   1.189354   .0748615      1.038382    1.340327
    _ratio_6 |   1.461179   .1268808      1.205299    1.717058
    _ratio_7 |   1.365242   .1935897      .9748308    1.755652
    _ratio_8 |    1.66361   .2204068      1.219117    2.108103
    _ratio_9 |   1.204906    .110774      .9815093    1.428303
   _ratio_10 |   1.519659   .1688579      1.179124    1.860193
--------------------------------------------------------------

. 
. outreg2 using "C:\Users\wrmaechl\OneDrive - Syracuse University\Documents\GitHub\course-project-zipcentercrime\Visual Graph
> ics\Ratio.tex", replace sum(log)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
    near_fid |         44        22.5    12.84523          1         44
dist_gro~100 |         44    .0028387    .0030465          0   .0119685
dist_gr~_250 |         44      .00187     .001907          0   .0086944
dist_gr~_500 |         44    .0016804    .0017219          0    .007086
dist_gr~_750 |         44    .0010695     .000712          0   .0026942
-------------+---------------------------------------------------------
dist_gr~1000 |         44    .0009799    .0006861          0   .0027225
dist_gr~1250 |         44    .0008239    .0006805          0   .0031418
dist_gr~1500 |         44    .0005638    .0005659          0   .0023215
dist_gr~1750 |         44     .000413    .0004326          0   .0016176
dist_gr~2000 |         44    .0002483      .00028          0   .0009561
-------------+---------------------------------------------------------
dist_gr~2250 |         44     .000206    .0002705          0   .0010198
dist_gr~2500 |         44    .0001356    .0001788          0   .0006554


C:\Users\wrmaechl\OneDrive - Syracuse University\Documents\GitHub\course-project-zipcentercrime\Visual Graphics\Ratio.tex
dir : seeout

*To create a regression line graph follow these steps. This measures the distance decay and see how the strong the correlation between the frequency of CallxArea and the distance groups
regress CallxArea dist_group

ssc install outreg2
outreg2 using CallxArea_Regress.doc, replace word
seeout using "CallxArea_Regress.txt"
. 
. 
. log close
      name:  <unnamed>
       log:  C:\Users\wrmaechl\OneDrive - Syracuse University\Documents\GitHub\course-project-zipcentercrime\Reproducibility 
> Package\Data_log.log
  log type:  text
 closed on:   1 Dec 2024, 14:55:55
-----------------------------------------------------------------------------------------------------------------------------
